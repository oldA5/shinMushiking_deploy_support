
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author oldA5
 */
public class NewJFrame extends javax.swing.JFrame {

       String[][] mushi = new String[15][7];
       String[][] aika = new String[15][7];
       DefaultListModel<String> mushi_model;
       DefaultListModel<String> aika_model;
       int a = -1;
       int b = -1;
       int c = -1;
       int d = -1;
       String[] tc;
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        sklLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        starLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tacit = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        healthLabel = new javax.swing.JLabel();
        atkLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel3.setText("體力:");

        sklLabel1.setText("jLabel8");

        jLabel4.setText("攻擊:");

        starLabel.setText("jLabel8");

        jLabel5.setText("技巧:");

        jLabel6.setText("默契度:");

        jLabel7.setText("星數:");

        tacit.setText("jLabel8");

        idLabel.setText("jLabel8");

        nameLabel.setText("jLabel8");

        jLabel1.setText("ID:");

        healthLabel.setText("jLabel8");

        atkLabel.setText("jLabel8");

        jLabel2.setText("名稱:");

        jList1.setToolTipText("");
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList2);

        jList3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jList3);

        jList4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList4MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jList4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(atkLabel)
                            .addComponent(healthLabel)
                            .addComponent(nameLabel)
                            .addComponent(idLabel)
                            .addComponent(sklLabel1)
                            .addComponent(starLabel)
                            .addComponent(tacit)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(idLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(healthLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(atkLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(sklLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tacit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(starLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public int flag_check(int checker,int flag){
        if(checker!=-1){
            flag += 1;
        }
        return flag;
    }
    public int get_tacitnum(){
        int pp = 0;
        if(Integer.parseInt(mushi[a][6]) > 2){
            pp = 3;
        }
        else if(Integer.parseInt(mushi[a][6]) == 2){
           pp = 2;
        }
        else{
           pp = 1;
        }
        return pp;
    }
    public void check_tacit(){
        if(a!=-1){
            int tacit_p = 0;
            int flag = 0;
            int fin = 0;

            tacit_p = get_tacitnum();
            flag = flag_check(b,flag);
            flag = flag_check(c,flag);
            flag = flag_check(d,flag);
            if(flag >= tacit_p){
                for(int i = 0;i<tc.length;i++){
                    if(aika[b][5].equals(tc[i])){
                        tc[i] = "-1";
                        break;
                    }
                }
                for(int i = 0;i<tc.length;i++){
                    if(aika[c][5].equals(tc[i])){
                        tc[i] = "-1";
                        break;
                    }
                }
                for(int i = 0;i<tc.length;i++){
                    if(aika[d][5].equals(tc[i])){
                        tc[i] = "-1";
                        break;
                    }
                }
                for(int i = 0;i<tc.length;i++){
                    fin += Integer.parseInt(tc[i]);
                }
                if(fin+tacit_p==0){
                    tacit.setText("O");
                    int health = Integer.parseInt(healthLabel.getText());
                    int atk = Integer.parseInt(atkLabel.getText());
                    int skl = Integer.parseInt(sklLabel1.getText());
                    health += 15;
                    atk += 15;
                    skl += 15;
                    healthLabel.setText(""+health);
                    atkLabel.setText(""+atk);
                    sklLabel1.setText(""+skl);
                }
                else{
                    tacit.setText("X");
                }
            }
            else{
              tacit.setText("X");
            }
        }
    }
    public void chose_aika(){
       if(a!=-1){
            int health = Integer.parseInt(mushi[a][2]);
            int atk = Integer.parseInt(mushi[a][3]);
            int skl = Integer.parseInt(mushi[a][4]);
            int star = Integer.parseInt(mushi[a][6]);
            b = jList2.getSelectedIndex();
            c = jList3.getSelectedIndex();
            d = jList4.getSelectedIndex();
            if(b!=-1){
                health = health + Integer.parseInt(aika[b][2]);
                atk = atk + Integer.parseInt(aika[b][3]);
                skl = skl + Integer.parseInt(aika[b][4]);
                star = star + Integer.parseInt(aika[b][6]);
            }
           if(c!=-1){
                health = health + Integer.parseInt(aika[c][2]);
                atk = atk + Integer.parseInt(aika[c][3]);
                skl = skl + Integer.parseInt(aika[c][4]);
                star = star + Integer.parseInt(aika[c][6]);
            }
           if(d!=-1){
                health = health + Integer.parseInt(aika[d][2]);
                atk = atk + Integer.parseInt(aika[d][3]);
                skl = skl + Integer.parseInt(aika[d][4]);
                star = star + Integer.parseInt(aika[d][6]);
            }
        healthLabel.setText(""+health);
        atkLabel.setText(""+atk);
        sklLabel1.setText(""+skl);
        starLabel.setText(""+star);
        }
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        idLabel.setText("");
        nameLabel.setText("");
        healthLabel.setText("");
        atkLabel.setText("");
        sklLabel1.setText("");
        tacit.setText("");
        starLabel.setText("");
       FileReader fr = null;
       mushi_model = new DefaultListModel<String>();
       aika_model = new DefaultListModel<String>();
       int i = 0;
       int j = 0;
        try {
            fr = new FileReader("data.txt");
            BufferedReader br = new BufferedReader(fr);
            while (br.ready()) {
                String g = br.readLine();
                if(g.charAt(0)=='M'){
                    mushi[i] = g.split(";");
                    mushi_model.addElement(mushi[i][1]);
                    i += 1;
                }
                else{
                    aika[j] = g.split(";");
                    aika_model.addElement(aika[j][1]);
                    j += 1;
                }
            }
        }
        catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally {
            try {
                fr.close();
            } catch (IOException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        jList1.setModel(mushi_model);
        jList2.setModel(aika_model);
        jList3.setModel(aika_model);
        jList4.setModel(aika_model);
    }//GEN-LAST:event_formWindowOpened

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked

       a = jList1.getSelectedIndex();
        
        idLabel.setText(mushi[a][0]);
        nameLabel.setText(mushi[a][1]);
        healthLabel.setText(mushi[a][2]);
        atkLabel.setText(mushi[a][3]);
        sklLabel1.setText(mushi[a][4]);
//        tacit.setText(mushi[a][5]);
        tacit.setText("");
        starLabel.setText(mushi[a][6]);
        tc = mushi[a][5].split(",");
        chose_aika();
        check_tacit();
    }//GEN-LAST:event_jList1MouseClicked

    private void jList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseClicked
        tc = mushi[a][5].split(",");
        chose_aika();
        check_tacit();
    }//GEN-LAST:event_jList2MouseClicked

    private void jList3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList3MouseClicked
        tc = mushi[a][5].split(",");
        chose_aika();
        check_tacit();
    }//GEN-LAST:event_jList3MouseClicked

    private void jList4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList4MouseClicked
        tc = mushi[a][5].split(",");
        chose_aika();
        check_tacit();
    }//GEN-LAST:event_jList4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel atkLabel;
    private javax.swing.JLabel healthLabel;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JList jList3;
    private javax.swing.JList jList4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel sklLabel1;
    private javax.swing.JLabel starLabel;
    private javax.swing.JLabel tacit;
    // End of variables declaration//GEN-END:variables
}
